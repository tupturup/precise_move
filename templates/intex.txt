
    ser = serial.Serial(port='COM2', baudrate=115200,
        parity=serial.PARITY_NONE,
        stopbits=serial.STOPBITS_ONE,
        bytesize=serial.EIGHTBITS,
        timeout=3)

    value_x = str(request.args.get('value_x', type=int))
    value_y = str(request.args.get('value_y', type=int))
    value_z = str(request.args.get('value_z', type=int))
    tgt_name = str(request.args.get('tgt_name', type=str))

    sss = 'XJ'+ value_x +','+ value_y + ',' + value_z + '\r'
    ser.write(sss)
    out = ser.read(30)





      <!-- ENTERING THE VALUES -->
<!--      <div class="container-fluid">
        <form class="form-horizontal my-form" role="form" method="post">
          <div class="form-group">
            <label class="col-sm-1 control-label" for="name">Name</label>
            <div class="col-sm-2">
              {{ form.name }}
              <!-- <input type="text" class="form-control text-center" name="name" id="name" placeholder="Name">-->
<!--            </div><!-- /col-sm-2 -->
<!--            <label class="col-sm-1 control-label">X</label>
            <div class="col-sm-2">
              {{ form.value_x }}
              <!-- <input type="text" class="form-control text-center" name="value_x" id="value_x" placeholder="X"> -->
<!--            </div><!-- /col-sm-2 -->
<!--            <label class="col-sm-1 control-label">Y</label>
            <div class="col-sm-2">
              {{ form.value_y }}
              <!-- <input type="text" class="form-control text-center" name="value_y" id="value_y" placeholder="Y"> -->
<!--            </div><!-- /col-sm-2 -->
<!--            <label class="col-sm-1 control-label">Z</label>
            <div class="col-sm-2">
              {{ form.value_z }}
              <!-- <input type="text" class="form-control text-center" name="value_z" id="value_z" placeholder="Z">-->
<!--            </div><!-- /col-sm-2 -->
<!--          </div> <!-- /nested form-group -->
<!--        </form>
      </div><!-- container-fluid --> -->


---------------------------------------------------------------------------------

@app.route('/')
def index():
    targets = session.query(Target).all()
    return render_template('index.html', targets=targets)
    #promijeniti imena targets i target da se ne zbunjujem


@app.route('/targets')
def targets():
    targets = session.query(Target).all()
    return render_template('targets.html', targets=targets)


@app.route('/target/add', methods=['POST', 'GET'])
def add_numbers():
    form = TargetForm(request.form)
    error = None
    if request.method == 'POST':
        if form.validate():
            target = Target(form.tgt_name.data, form.value_x.data, form.value_y.data, form.value_z.data)
            flash('You sucessfully added a new target!')
            ser = serial.Serial(port='COM2', baudrate=115200,
                parity=serial.PARITY_NONE,
                stopbits=serial.STOPBITS_ONE,
                bytesize=serial.EIGHTBITS,
                timeout=3)

            sss = 'XJ'+ str(int(target.value_x)) +','+ str(int(target.value_y)) + ',' + str(int(target.value_z)) + '\r'
            ser.write(sss)
            result = ser.read(30)

            session.add(target)
            session.commit()
            return redirect(url_for('index', result=result))
        else:
            error = "Fields are not filled correctly!"

    return render_template('target_form.html', form=form, action="/target/add", error=error )
    #return jsonify(result=out)
    #return  redirect(url_for('__main__'))


@app.route("/target/<int:tgt_id>/edit", methods=['GET', 'POST'])
def edit_target(tgt_id):
    form = TargetForm(request.form)
    if request.method == 'GET':
        form = TargetForm(request.form, session.query(Target).get(tgt_id))
    if request.method == 'POST':
        if form.validate():
            tgt_edited = Target(form.tgt_name.data, form.value_x.data, form.value_y.data, form.value_z.data)
            flash(u'You sucessfully edited target %s' % form.tgt_name.data)
            target_db = session.query(Target).get(tgt_id)
            target_db.tgt_name = tgt_edited.tgt_name
            target_db.value_x = tgt_edited.value_x
            target_db.value_y = tgt_edited.value_y
            target_db.value_z = tgt_edited.value_z
            session.commit()
            return redirect(url_for('index'))
        else:
            error = "Fields are not filled correctly!"
    return render_template('target_form.html', form=form, action="/target/%s/edit" % tgt_id, submit_text="Save")


@app.route("/target/<int:tgt_id>/delete")
def delete_target(tgt_id):
    target = session.query(Target).get(tgt_id)
    session.delete(target)
    session.commit()
    return redirect(url_for('index'))


@app.route("/target/<int:tgt_id>/run")
def run_target(tgt_id):
    target_db = session.query(Target).get(tgt_id)
    ser = serial.Serial(port='COM2', baudrate=115200, parity=serial.PARITY_NONE, stopbits=serial.STOPBITS_ONE, bytesize=serial.EIGHTBITS, timeout=3)

    sss = 'XJ'+ str(int(target_db.value_x)) +','+ str(int(target_db.value_y)) + ',' + str(int(target_db.value_z)) + '\r'
    ser.write(sss)
    out = ser.read(30)

    return redirect(url_for('index'))


@app.route("/dev_ide")
def dev_ide():
    return render_template('dev_ide.html')


if __name__ == "__main__":
    print('oh hello')
    #sleep(10)
    sys.stdout.flush()
    app.debug = True
    app.run()
